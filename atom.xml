<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>henjue Blog</title>
  <icon>https://www.gravatar.com/avatar/456d0cd4ba07e07f1aae1f8207fc7b0d</icon>
  <subtitle>Android Developer,Linuxer,Googler，LiGuxer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.j99.io/"/>
  <updated>2018-03-28T03:15:57.413Z</updated>
  <id>https://www.j99.io/</id>
  
  <author>
    <name>henjue</name>
    <email>henjue@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RxCache 网络异常的时候使用本地缓存数据</title>
    <link href="https://www.j99.io/2018/03/28/RxCache-%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8%E7%9A%84%E6%97%B6%E5%80%99%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E6%95%B0%E6%8D%AE/"/>
    <id>https://www.j99.io/2018/03/28/RxCache-网络异常的时候使用本地缓存数据/</id>
    <published>2018-03-28T02:48:37.000Z</published>
    <updated>2018-03-28T03:15:57.413Z</updated>
    
    <content type="html"><![CDATA[<p>本文假设你使用的是RxCache+RxJava2+retrofit2网络请求,本文代码片段均为使用kotlin,本文中代码可能无法直接运行<br>RxCache在构建Provider的时候提供了一个useExpiredDataIfLoaderNotAvailable选项，但是这个选项的作用在缓存没有过期的时候就不起作用了。比如某个接口设置的缓存时间比较长比如1一个月，或者用客户端需求是用户主动触发下拉刷新的时候就必须请求服务器的数据。假如失败或者服务器出错了就默认显示本地缓存数据反之使用服务器最新数据并缓存。这时候仅仅用useExpiredDataIfLoaderNotAvailable就满足不了需求了，不过我们可以通过RxJava的flapmap来达到我们的需求。代码如下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">UserProviders</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Expirable(false)</span></span><br><span class="line">    <span class="meta">@LifeCache(duration = 30L, timeUnit = TimeUnit.DAYS)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">listUsers</span><span class="params">(res: <span class="type">Observable</span>&lt;<span class="type">UserListResponse</span>&gt;, evictProvider: <span class="type">EvictProvider</span>)</span></span>: Observable&lt;Reply&lt;UserListResponse&gt;&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserReporitory</span></span>(<span class="keyword">val</span> service: UserService, <span class="keyword">val</span> app: IApplication) &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> providers = RxCache.Builder()</span><br><span class="line">            .useExpiredDataIfLoaderNotAvailable(<span class="literal">true</span>)</span><br><span class="line">            .setMaxMBPersistenceCache(<span class="number">300</span>)</span><br><span class="line">            .persistence(app.cacheDir, GsonSpeaker())</span><br><span class="line">            .using&lt;UserProviders&gt;(UserProviders::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">listUsers</span><span class="params">(<span class="meta">@Query(<span class="meta-string">"page"</span>)</span>page:<span class="type">Int</span>=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                         <span class="meta">@Query(<span class="meta-string">"size"</span>)</span> size: <span class="type">Int</span>=<span class="number">10</span>)</span></span>: Observable&lt;Reply&lt;UserListResponse&gt;&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> providers.listUsers(service.listUsers(page,size), EvictProvider(<span class="literal">false</span>)).flatMap &#123; res -&gt;</span><br><span class="line">            <span class="keyword">if</span> (res.source != Source.CLOUD) &#123;</span><br><span class="line">                providers.listUsers(service.listUsers(pk, time, k, language, hash), EvictProvider(<span class="literal">true</span>))</span><br><span class="line">                        .onErrorResumeNext(Observable.just(res))</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Observable.just(res)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserListActivity</span>:<span class="type">AppCompatActivity</span></span>()&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> reporitory: UserReporitory</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> schedulers: SchedulerProvider    </span><br><span class="line">      <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        reporitory.listUsers(<span class="number">1</span>,<span class="number">15</span>)</span><br><span class="line">        .observeOn(schedulers.ui())</span><br><span class="line">        .subscribe&#123; res-&gt;</span><br><span class="line">            <span class="comment">//your code</span></span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文假设你使用的是RxCache+RxJava2+retrofit2网络请求,本文代码片段均为使用kotlin,本文中代码可能无法直接运行&lt;br&gt;RxCache在构建Provider的时候提供了一个useExpiredDataIfLoaderNotAvailable选项，但
      
    
    </summary>
    
      <category term="android" scheme="https://www.j99.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>处理circleci构建android的时候无法更新新版build tool问题</title>
    <link href="https://www.j99.io/2016/04/12/%E5%A4%84%E7%90%86circleci%E6%9E%84%E5%BB%BAandroid%E7%9A%84%E6%97%B6%E5%80%99%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0%E6%96%B0%E7%89%88build-tool%E9%97%AE%E9%A2%98/"/>
    <id>https://www.j99.io/2016/04/12/处理circleci构建android的时候无法更新新版build-tool问题/</id>
    <published>2016-04-12T05:35:50.000Z</published>
    <updated>2018-03-27T10:17:58.183Z</updated>
    
    <content type="html"><![CDATA[<p>circle.yml如下<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line"><span class="attr">  pre:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">y</span> <span class="string">| android update sdk --no-ui --all --filter "android-23,build-tools-23.0.2,extra-android-support,extra-google-m2repository,extra-android-m2repository</span></span><br><span class="line"><span class="string"></span><span class="attr">test:</span></span><br><span class="line"><span class="attr">  override:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">./gradlew</span> <span class="string">assemblePreview</span></span><br></pre></td></tr></table></figure></p><p>在使用circleci构建android的时候发现找不到build tools 23.0.2,出现如下错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: Ignoring unknown package filter <span class="string">'build-tools-23.0.2'</span></span><br><span class="line">Warning: The package filter removed all packages. There is nothing to install.</span><br><span class="line">         Please consider trying to update again without a package filter.</span><br></pre></td></tr></table></figure></p><p>这时候需要先更新下sdk tools,修改circle.yml如下<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line"><span class="attr">  pre:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">y</span> <span class="string">| android update sdk --no-ui --all --filter "tools" #新增加这行就可以先更新sdk tools</span></span><br><span class="line"><span class="string">    - echo y | android update sdk --no-ui --all --filter "android-23,build-tools-23.0.2,extra-android-support,extra-google-m2repository,extra-android-m2repository"</span></span><br><span class="line"><span class="string"></span><span class="attr">test:</span></span><br><span class="line"><span class="attr">  override:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">./gradlew</span> <span class="string">:app:assemblePreview</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;circle.yml如下&lt;br&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>share sdk 使用教程</title>
    <link href="https://www.j99.io/2015/06/24/share-sdk-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://www.j99.io/2015/06/24/share-sdk-使用教程/</id>
    <published>2015-06-24T04:40:56.000Z</published>
    <updated>2018-03-27T10:17:58.181Z</updated>
    
    <content type="html"><![CDATA[<p>最近网上某公司提供的Share SDK干了一些不太爽的事情，正好这几天公司项目在做这块，就写了一个sdk出来供大家使用，开源、方便、安全。</p><p>项目地址:<a href="https://github.com/henjue/sharesdk" target="_blank" rel="noopener">https://github.com/henjue/sharesdk</a></p><h2 id="1、加入依赖"><a href="#1、加入依赖" class="headerlink" title="1、加入依赖"></a>1、加入依赖</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'org.henjue.library:sharesdk:1.0.1'</span></span><br></pre></td></tr></table></figure><h2 id="2、在Applicaton中初始化"><a href="#2、在Applicaton中初始化" class="headerlink" title="2、在Applicaton中初始化"></a>2、在Applicaton中初始化</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*参数依次是</span></span><br><span class="line"><span class="comment"> *微信 key</span></span><br><span class="line"><span class="comment"> *微博 key</span></span><br><span class="line"><span class="comment"> *Q Q  key</span></span><br><span class="line"><span class="comment"> *微信 secret</span></span><br><span class="line"><span class="comment"> *微薄 redirect</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ShareSDK.getInstance().initShare(<span class="string">"weixinappkey"</span>,<span class="string">"weiboappkey"</span>,<span class="string">"qqappkey"</span>,<span class="string">"weixinsecret"</span>,<span class="string">"sinaweiboredirect"</span>);</span><br></pre></td></tr></table></figure><h2 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.henjue.library.share.Type;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.AuthFactory;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.IAuthManager;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.model.AuthInfo;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.AuthListener;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.WeiboAuthManager;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">IAuthManager iAuthManager = AuthFactory.create(<span class="keyword">this</span>, Type.Platform.WEIXIN);</span><br><span class="line"><span class="comment">//IAuthManager iAuthManager = AuthFactory.create(this, Type.Platform.WEIBO);</span></span><br><span class="line"><span class="comment">//IAuthManager iAuthManager = AuthFactory.create(this, Type.Platform.QQ);</span></span><br><span class="line">iAuthManager.login(<span class="keyword">new</span> ThirdPartyLoginListener(<span class="keyword">this</span>,ThirdPartyLoginListener.TYPE_WX));</span><br></pre></td></tr></table></figure><p>ThirdPartyLoginListener.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ThirdPartyLoginListener</span> <span class="keyword">implements</span> <span class="title">AuthListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_WX=<span class="number">0x2001</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_WB=<span class="number">0x2002</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_QQ=<span class="number">0x2003</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOG_TAG =ThirdPartyLoginListener.class.getName() ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Activity mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mType;</span><br><span class="line"></span><br><span class="line">    ThirdPartyLoginListener(Activity context,<span class="keyword">int</span> type)&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext=context;</span><br><span class="line">        <span class="keyword">this</span>.mType=type;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(<span class="keyword">final</span> AuthInfo info)</span> </span>&#123;</span><br><span class="line">        String data = info.data;<span class="comment">//第三方平台返回的原始数据</span></span><br><span class="line">        <span class="keyword">long</span> expiresTime = info.expiresTime;<span class="comment">//token有效期</span></span><br><span class="line">        String headimgurl = info.headimgurl;<span class="comment">//用户头像地址</span></span><br><span class="line">        String id = info.id;<span class="comment">//用户唯一标识</span></span><br><span class="line">        String nickname = info.nickname;<span class="comment">//用户昵称</span></span><br><span class="line">        String token = info.token;<span class="comment">//用户token</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.henjue.library.share.Type;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.ShareFactory;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.IShareManager;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.model.MessagePic;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.model.MessageWebpage;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.QQShareManager;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.WechatShareManager;</span><br><span class="line"><span class="keyword">import</span> org.henjue.library.share.manager.WeiboShareManager;</span><br><span class="line">...</span><br><span class="line">IShareManager iShareManager= ShareFactory.create(getActivity(), Type.Platform.QQ);</span><br><span class="line"><span class="comment">//IShareManager iShareManager= ShareFactory.create(getActivity(), Type.Platform.WEIBO);</span></span><br><span class="line"><span class="comment">//IShareManager iShareManager= ShareFactory.create(getActivity(), Type.Platform.WEIXIN);</span></span><br><span class="line">iShareManager.share(<span class="keyword">new</span> MessageWebpage(<span class="string">"#我的图片会说话# 我用创可贴创作了一张很赞的照片"</span>,<span class="string">"#我的图片会说话# 我用创可贴创作了一张很赞的照片"</span>,<span class="string">"http://www.ketie.me"</span>,img_url),QQShareManager.QZONE_SHARE_TYPE);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近网上某公司提供的Share SDK干了一些不太爽的事情，正好这几天公司项目在做这块，就写了一个sdk出来供大家使用，开源、方便、安全。&lt;/p&gt;
&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/henjue/sharesdk&quot; target=&quot;_b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Google Android DataBinding Part1</title>
    <link href="https://www.j99.io/2015/06/01/Google-Android-DataBinding-Part1/"/>
    <id>https://www.j99.io/2015/06/01/Google-Android-DataBinding-Part1/</id>
    <published>2015-06-01T03:12:41.000Z</published>
    <updated>2018-03-27T10:17:58.176Z</updated>
    
    <content type="html"><![CDATA[<p>Google 2015 IO大会中对于Android开发曾了Data Binding(虽然在这之前已经有一些第三方框架，在在这里我们只到google)<br>PS:目前不推荐正是项目中使用，因为Data Binding的目前紧紧处于可以编译可以运行使用阶段，对于很对开发者来说不适合使用，比如gradle还不能自动clean，Android Studio也没有友好的提示等等.</p><p>###以上代码运行自动显示User里相应数据，点击”隐藏”按钮，将设置nickname属性为””，TextView自动隐藏;</p><p>###其他用法将在part2,part3….中讲解</p><p>Google官方资料<a href="https://developer.android.com/tools/data-binding/guide.html" target="_blank" rel="noopener">data-binding</a></p><p>##Gradle配置</p><p>####项目build.gradle<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:1.2.3'</span></span><br><span class="line">        classpath <span class="string">"com.android.databinding:dataBinder:1.0-rc0"</span><span class="comment">//加入这个</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>####模块build.gradle<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.application'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.databinding'</span><span class="comment">//加入这个</span></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">22</span></span><br><span class="line">    buildToolsVersion <span class="string">"22.0.1"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"org.henjue.databindingdemo"</span></span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">22</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="string">dir:</span> <span class="string">'libs'</span>, <span class="string">include:</span> [<span class="string">'*.jar'</span>])</span><br><span class="line">    compile <span class="string">'com.android.support:appcompat-v7:22.2.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下面是代码示例</p><p>##Actvity<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ActivityMainBinding这个类是编译器根据layout的命名自动生成的，并且layout中根阶段必须是&lt;layout&gt;标签</span></span><br><span class="line"><span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> User user=<span class="keyword">new</span> User();</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    binding=DataBindingUtil.setContentView(<span class="keyword">this</span>,R.layout.activity_main);</span><br><span class="line">    user.setId(<span class="number">1</span>);</span><br><span class="line">    user.setNickname(<span class="string">"henjue"</span>);</span><br><span class="line">    user.setLoginname(<span class="string">"henjue@gmail.com"</span>);</span><br><span class="line">    binding.setUser(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clickHide</span><span class="params">(View v)</span></span>&#123;</span><br><span class="line">    <span class="comment">//将nickname设置为空，TextVIew(nickname)将自定隐藏</span></span><br><span class="line">    user.setNickname(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##Model<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">BaseObservable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="meta">@Bindable</span><span class="comment">//使用@Bindable注解可以生成相应的BR，用于监控变量变化使用（非必须）</span></span><br><span class="line">    <span class="keyword">private</span> String loginname;</span><br><span class="line">    <span class="meta">@Bindable</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Bindable</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLoginname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> loginname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLoginname</span><span class="params">(String loginname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.loginname = loginname;</span><br><span class="line">        notifyPropertyChanged(BR.loginname);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">        notifyPropertyChanged(BR.password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">        notifyPropertyChanged(BR.nickname);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##Layout<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">"android.text.TextUtils"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">import</span> <span class="attr">type</span>=<span class="string">"android.view.View"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">variable</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">type</span>=<span class="string">"org.henjue.databindingdemo.model.User"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nickname"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:visibility</span>=<span class="string">"@&#123;TextUtils.isEmpty(user.nickname)?View.GONE:View.VISIBLE&#125;"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@&#123;user.nickname&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/loginname"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@&#123;user.loginname&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@&#123;user.password&#125;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:onClick</span>=<span class="string">"clickHide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/btn_hide"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>源码地址:<a href="https://gitcafe.com/henjue_demos/DataBindingDemo" target="_blank" rel="noopener">https://gitcafe.com/henjue_demos/DataBindingDemo</a></p><p>以上代码运行自动显示User里相应数据，点击”隐藏”按钮，将设置nickname属性为””，TextView自动隐藏<br>其他用法将在part2,part3….中讲解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Google 2015 IO大会中对于Android开发曾了Data Binding(虽然在这之前已经有一些第三方框架，在在这里我们只到google)&lt;br&gt;PS:目前不推荐正是项目中使用，因为Data Binding的目前紧紧处于可以编译可以运行使用阶段，对于很对开发者来
      
    
    </summary>
    
    
      <category term="Google Android Data Binding 基础用法" scheme="https://www.j99.io/tags/Google-Android-Data-Binding-%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>去掉Android 5.0 感叹号</title>
    <link href="https://www.j99.io/2015/03/19/%E5%8E%BB%E6%8E%89Android-5-0-%E6%84%9F%E5%8F%B9%E5%8F%B7/"/>
    <id>https://www.j99.io/2015/03/19/去掉Android-5-0-感叹号/</id>
    <published>2015-03-18T17:10:32.000Z</published>
    <updated>2018-03-27T10:17:58.182Z</updated>
    
    <content type="html"><![CDATA[<p>Android 5.0 状态栏网络图标上有个感叹号，输入下面的命令即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell <span class="string">"settings put global captive_portal_server 204.j99.io"</span></span><br></pre></td></tr></table></figure></p><p>出现感叹号的原因和为什么要这么做这里就不讲了，网上有很多资料，这里主要是为了提供204.j99.io 这个服务器地址<br>页面直接访问是什么都看不到了，其实就是相应一个204的HTTP Status Code</p><p>Server Source Code:<a href="https://github.com/henjue/204" target="_blank" rel="noopener">https://github.com/henjue/204</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Android 5.0 状态栏网络图标上有个感叹号，输入下面的命令即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决com.android.dex.DexException: Multiple dex files define L&lt;your app packagename&gt;/BuildConfig;</title>
    <link href="https://www.j99.io/2015/03/17/%E8%A7%A3%E5%86%B3com-android-dex-DexException-Multiple-dex-files-define-L-your-app-packagename-BuildConfig/"/>
    <id>https://www.j99.io/2015/03/17/解决com-android-dex-DexException-Multiple-dex-files-define-L-your-app-packagename-BuildConfig/</id>
    <published>2015-03-17T08:30:08.000Z</published>
    <updated>2018-03-27T10:17:58.184Z</updated>
    
    <content type="html"><![CDATA[<p>一般我们在使用Android Studio建立多个module，有两个包名一样且其中某个(些)module是library的时候多半会出现这个错误，这是因为有多个BuildConfig.java(包名也相同)<br>这时候其实只需要在类型是library的build.gradle中加入<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packageBuildConfig(<span class="keyword">false</span>)</span><br></pre></td></tr></table></figure></p><p>#例如：</p><p>##原始<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.library'</span></span><br><span class="line">apply plugin: <span class="string">'eclipse'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">"21.1.1"</span></span><br><span class="line">    enforceUniquePackageName=<span class="keyword">false</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">19</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>##修改后<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.library'</span></span><br><span class="line">apply plugin: <span class="string">'eclipse'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">"21.1.1"</span></span><br><span class="line">    enforceUniquePackageName=<span class="keyword">false</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">19</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    packageBuildConfig(<span class="keyword">false</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>#一般编译的时候控制台最后几行看到的错误是类似下面的这样<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">UNEXPECTED TOP-LEVEL EXCEPTION:</span><br><span class="line">com.android.dex.DexException: Multiple dex files define Lcn/com/vargo/net/BuildConfig;</span><br><span class="line">at com.android.dx.merge.DexMerger.readSortableTypes(DexMerger.java:<span class="number">596</span>)</span><br><span class="line">at com.android.dx.merge.DexMerger.getSortedTypes(DexMerger.java:<span class="number">554</span>)</span><br><span class="line">at com.android.dx.merge.DexMerger.mergeClassDefs(DexMerger.java:<span class="number">535</span>)</span><br><span class="line">at com.android.dx.merge.DexMerger.mergeDexes(DexMerger.java:<span class="number">171</span>)</span><br><span class="line">at com.android.dx.merge.DexMerger.merge(DexMerger.java:<span class="number">189</span>)</span><br><span class="line">at com.android.dx.command.dexer.Main.mergeLibraryDexBuffers(Main.java:<span class="number">454</span>)</span><br><span class="line">at com.android.dx.command.dexer.Main.runMonoDex(Main.java:<span class="number">302</span>)</span><br><span class="line">at com.android.dx.command.dexer.Main.run(Main.java:<span class="number">245</span>)</span><br><span class="line">at com.android.dx.command.dexer.Main.main(Main.java:<span class="number">214</span>)</span><br><span class="line">at com.android.dx.command.Main.main(Main.java:<span class="number">106</span>)</span><br><span class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:dexDebug'</span>.</span><br><span class="line">&gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process <span class="string">'command '</span>/usr/lib/jvm/java-<span class="number">7</span>-openjdk-amd64/bin/java<span class="string">''</span> finished with non-zero exit value <span class="number">2</span></span><br><span class="line">Information:BUILD FAILED</span><br><span class="line">Information:Total time: <span class="number">5.575</span> secs</span><br><span class="line">Information:<span class="number">1</span> error</span><br><span class="line">Information:<span class="number">0</span> warnings</span><br><span class="line">Information:See complete output in console</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般我们在使用Android Studio建立多个module，有两个包名一样且其中某个(些)module是library的时候多半会出现这个错误，这是因为有多个BuildConfig.java(包名也相同)&lt;br&gt;这时候其实只需要在类型是library的build.gra
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Studio(Intellij IDEA) 导入Android Open Source Project(AOSP) 源码</title>
    <link href="https://www.j99.io/2015/02/05/Android-Studio-Intellij-IDEA-%E5%AF%BC%E5%85%A5Android-Open-Source-Project-AOSP-%E6%BA%90%E7%A0%81/"/>
    <id>https://www.j99.io/2015/02/05/Android-Studio-Intellij-IDEA-导入Android-Open-Source-Project-AOSP-源码/</id>
    <published>2015-02-05T07:08:08.000Z</published>
    <updated>2018-03-27T10:17:58.175Z</updated>
    
    <content type="html"><![CDATA[<p>一、生产IDE配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">croot</span><br><span class="line">make idegen</span><br><span class="line">development/tools/idegen/idegen.sh</span><br></pre></td></tr></table></figure></p><p>二、导入到IDE<br>1、启动Android Studio(或Intellij IDEA)<br>2、如果有启动向导就选择”Open an existing Project”,如果没有就到菜单栏选择File,Open<br>   然后选择“android.ipr”这个文件</p><p>好了现在你可以不用再忍受linux下eclipse的众多不方便问题了!比如突然FC之类的！</p><p>如果相关问题处理和IDE的配置自行baidu，google。网上有很多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、生产IDE配置文件&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>intel集成显卡ubuntu驱动安装和分辨率设置方法</title>
    <link href="https://www.j99.io/2014/11/18/intel%E9%9B%86%E6%88%90%E6%98%BE%E5%8D%A1ubuntu%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%86%E8%BE%A8%E7%8E%87%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
    <id>https://www.j99.io/2014/11/18/intel集成显卡ubuntu驱动安装和分辨率设置方法/</id>
    <published>2014-11-18T12:26:55.000Z</published>
    <updated>2018-03-27T10:17:58.178Z</updated>
    
    <content type="html"><![CDATA[<p>Intel驱动安装工具下载<br><a href="https://01.org/linuxgraphics/downloads" target="_blank" rel="noopener">https://01.org/linuxgraphics/downloads</a><br>找到你对应的版本下班并安装（这个工具不光ubuntu可是使用）<br>如我下载的是：<br><a href="https://download.01.org/gfx/ubuntu/14.04/main/pool/main/i/intel-linux-graphics-installer/intel-linux-graphics-installer_1.0.7-0intel1_amd64.deb" target="_blank" rel="noopener">https://download.01.org/gfx/ubuntu/14.04/main/pool/main/i/intel-linux-graphics-installer/intel-linux-graphics-installer_1.0.7-0intel1_amd64.deb</a><br>开始安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i intel-linux-graphics-installer_1.0.7-0intel1_amd64.deb</span><br></pre></td></tr></table></figure></p><p>安装完成之后运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo intel-linux-graphics-installer</span><br></pre></td></tr></table></figure></p><p><img src="images/intel_installer_linux.png" alt="Alt text"></p><p>然后重启你的电脑，如果还是不能设置你电脑的最佳分辨率按照如下方法操作即可</p><p>按下Ctrl+Alt+F1(F2,F3,F4,F5,F6)随意一个然后登录<br>关闭图形界面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service lightdm stop</span><br></pre></td></tr></table></figure></p><p>然后：生成xorg.conf.new 文件,运行下面的命令((会在home目录下生成 xorg.conf.new))<strong><em>2014/12/03更新，之前忘记写这个命令了</em></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo Xorg -configure</span><br></pre></td></tr></table></figure></p><p>移动生产的配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv ~/xorg.conf.new /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure></p><p>运行如下命令生产分辨率配置信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtf 1920 1080 60 &gt; ~/dis.txt</span><br></pre></td></tr></table></figure></p><p>其中1920 1080你是显示器支持的最佳分辨，60是刷新频率,执行上面命令后会出现类似下面的结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 其中1920×1080 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 106.47 MHz</span><br><span class="line">Modeline “其中1920x1080_60.00″ 106.47 其中1920 1520 1672 1904 1080 901 904 932 -HSync +Vsync</span><br></pre></td></tr></table></figure></p><p>然后用vi打开xorg.conf配置文件（因为现在是在纯字符界面下所以只能用VI，我个人VI用的比较输入，你可以选择其他你熟悉的字符界面的编辑器）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure></p><p>打开之后在输入:sp ~/dis.txt （VI多窗口打开两个文件）</p><p>在vi中按Ctrl+w键切换到dis.txt的窗口找到Modeline的那一行然后按yy复制，<br>再按Ctrl+w键切换到xorg.conf的窗口找到Section “Monitor”的一行，在其中按两下p粘贴进去。然后保持xorg.conf文件<br>然后重启你的电脑<br>好了，打完收工 ………………</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Intel驱动安装工具下载&lt;br&gt;&lt;a href=&quot;https://01.org/linuxgraphics/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://01.org/linuxgraphics/downloads&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>android4.4编译sdk</title>
    <link href="https://www.j99.io/2014/10/17/android4-4%E7%BC%96%E8%AF%91sdk/"/>
    <id>https://www.j99.io/2014/10/17/android4-4编译sdk/</id>
    <published>2014-10-17T03:36:20.000Z</published>
    <updated>2018-03-27T10:17:58.178Z</updated>
    
    <content type="html"><![CDATA[<p>默认我们下载的源码是不包含编译SDK和ADT用到的所用工具的需要全部同步下来<br>如果之前代码已经同步过了就执行下面的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -g all</span><br></pre></td></tr></table></figure></p><p>如果第一次同步也一样在最后添加-a all将所用的代码都同步下来<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://android.googlesource.com/platform/manifest -g all，-notdefault</span><br></pre></td></tr></table></figure></p><p>同步玩代码之后编译sdk<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">lunch sdk-eng</span><br><span class="line">make sdk</span><br></pre></td></tr></table></figure></p><p>如果出现类似<br>PRODUCT_PACKAGES has nothing to install!.  Stop.<br>这样的错误，那说明你有添加一些错误的Module，或者Module不存在<br>找到build/target/product/core.mk,build/target/product/core_base.mk,build/target/product/sdk.mk 还有一些其他的文件，根据自己的实际情况检查下。如果有就删除掉。比如报错</p><p>Module ‘TestApp’ in PRODUCT_PACKAGES has nothing to install!.  Stop.</p><p>结果我发现TestApp这应用源码里已经被删除了，但是build/target/product/core.mk 里面的PRODUCT_PACKAGES中已经还添加着TestApp，删除掉就行<br>还有已经就是PRODUCT_PACKAGES中配置的一些Module 是LOCAL_JAVA_LIBRARIES的，同样要去掉，<br>LOCAL_STATIC_JAVA_LIBRARIES才是可以配置在PRODUCT_PACKAGES中（这句可能有的同学没看懂我意思）</p><p>编译ADT<br>修改sdk/eclipse/scripts/setup_eclipse.sh这个脚本以下两处（非必须，默认脚本中使用wget下载文件，修改成axel可以多线程下载）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  wget --continue $V --output-document="$TARGZ" "$DOWNLOAD_URL"</span></span><br><span class="line">  axel -n 20 <span class="string">"<span class="variable">$DOWNLOAD_URL</span>"</span> -o <span class="string">"<span class="variable">$TARGZ</span>"</span> -v</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  wget --continue $V --output-document="$CDTZIP" "$CDT_DOWNLOAD_URL"</span></span><br><span class="line">  axel -n 20 <span class="string">"<span class="variable">$CDT_DOWNLOAD_URL</span>"</span> -o <span class="string">"<span class="variable">$CDTZIP</span>"</span> -v</span><br></pre></td></tr></table></figure><p>然后运行这个脚本会自动下载eclipse和CDT插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk/eclipse/scripts/setup_eclipse.sh ./eclipse</span><br></pre></td></tr></table></figure></p><p>然后开始编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir out/dists -p</span><br><span class="line">sdk/eclipse/scripts/build_server.sh ./out/dists <span class="variable">$USER</span></span><br></pre></td></tr></table></figure></p><p>搞定，现在就可以用我们自己的adt和sdk来开发APP了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;默认我们下载的源码是不包含编译SDK和ADT用到的所用工具的需要全部同步下来&lt;br&gt;如果之前代码已经同步过了就执行下面的命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>屏蔽android的Sytem.out和System.err</title>
    <link href="https://www.j99.io/2014/08/05/-e5-b1-8f-e8-94-bdandroid-e7-9a-84sytem-out-e5-92-8csystem-err/"/>
    <id>https://www.j99.io/2014/08/05/-e5-b1-8f-e8-94-bdandroid-e7-9a-84sytem-out-e5-92-8csystem-err/</id>
    <published>2014-08-05T02:19:28.000Z</published>
    <updated>2018-03-27T10:17:58.175Z</updated>
    
    <content type="html"><![CDATA[<p>源代码中这个类 ./frameworks/base/core/java/com/android/internal/os/RuntimeInit.java中有个redirectLogStreams这个方法。这个方法就是将Sytem.out和System.err重定向到android的log系统</p><p>原来的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">  * Redirect System.out and System.err to the Android log.</span><br><span class="line">  */</span><br><span class="line"> public static void redirectLogStreams() &#123;</span><br><span class="line">     System.out.close();</span><br><span class="line">     System.setOut(new AndroidPrintStream(Log.INFO, &amp;quot;System.out&amp;quot;));</span><br><span class="line">     System.err.close();</span><br><span class="line">     System.setErr(new AndroidPrintStream(Log.WARN, &amp;quot;System.err&amp;quot;));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>修改后的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">  * Redirect System.out and System.err to the Android log.</span><br><span class="line">  */</span><br><span class="line"> public static void redirectLogStreams() &#123;</span><br><span class="line">     System.out.close();</span><br><span class="line">     //System.setOut(new AndroidPrintStream(Log.INFO, &amp;quot;System.out&amp;quot;));</span><br><span class="line">     System.err.close();</span><br><span class="line">     //System.setErr(new AndroidPrintStream(Log.WARN, &amp;quot;System.err&amp;quot;));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>就好了，这样所有app使用System.out.print打印东西的时候都不会打印任何东西</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;源代码中这个类 ./frameworks/base/core/java/com/android/internal/os/RuntimeInit.java中有个redirectLogStreams这个方法。这个方法就是将Sytem.out和System.err重定向到andr
      
    
    </summary>
    
      <category term="android" scheme="https://www.j99.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>android aidl 参数是实现Parcelable接口的对象是莫名其妙的NullPointException错误</title>
    <link href="https://www.j99.io/2014/07/22/android-aidl-e5-8f-82-e6-95-b0-e6-98-af-e5-ae-9e-e7-8e-b0parcelable-e6-8e-a5-e5-8f-a3-e7-9a-84-e5-af-b9-e8-b1-a1-e6-98-af-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84nullpointexception-e9-94-99/"/>
    <id>https://www.j99.io/2014/07/22/android-aidl-e5-8f-82-e6-95-b0-e6-98-af-e5-ae-9e-e7-8e-b0parcelable-e6-8e-a5-e5-8f-a3-e7-9a-84-e5-af-b9-e8-b1-a1-e6-98-af-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84nullpointexception-e9-94-99/</id>
    <published>2014-07-21T22:26:37.000Z</published>
    <updated>2018-03-27T10:17:58.177Z</updated>
    
    <content type="html"><![CDATA[<p>假如我的对象是SocketRequest实现了Parcelable接口（特别注意的是对象总有特别的数据，<strong>如byte［］ 等</strong>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">public class SocketRequest implements Parcelable &#123;</span><br><span class="line">private long fid;</span><br><span class="line">private byte[] data;</span><br><span class="line"></span><br><span class="line">public long getFid() &#123;</span><br><span class="line">return fid;</span><br><span class="line">&#125;</span><br><span class="line">public byte[] getData() &#123;</span><br><span class="line">return data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public SocketRequest(long fid,byte[] data) &#123;</span><br><span class="line">this.fid = fid;</span><br><span class="line">this.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private SocketRequest(Parcel in) &#123;</span><br><span class="line">this.fid = in.readLong();</span><br><span class="line">in.readByteArray(this.data);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">protected Object clone() throws CloneNotSupportedException &#123;</span><br><span class="line">return new SocketRequest(this.fid,this.data) ;</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public int describeContents() &#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void writeToParcel(Parcel dest, int flags) &#123;</span><br><span class="line">dest.writeLong(this.fid);</span><br><span class="line">dest.writeByteArray(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static final Parcelable.Creator&amp;lt;SocketRequest&amp;gt; CREATOR = new Parcelable.Creator&amp;lt;SocketRequest&amp;gt;() &#123;</span><br><span class="line">public SocketRequest createFromParcel(Parcel parcel) &#123;</span><br><span class="line">return new SocketRequest(parcel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public SocketRequest[] newArray(int size) &#123;</span><br><span class="line">return new SocketRequest[size];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果运行的时候保了空指针异常，不熟悉的人很难找到原因。<br>修改成以下的就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">public class SocketRequest implements Parcelable &#123;</span><br><span class="line">private long fid;</span><br><span class="line">private byte[] data;</span><br><span class="line"></span><br><span class="line">public long getFid() &#123;</span><br><span class="line">return fid;</span><br><span class="line">&#125;</span><br><span class="line">public byte[] getData() &#123;</span><br><span class="line">return data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public SocketRequest(long fid,byte[] data) &#123;</span><br><span class="line">this.fid = fid;</span><br><span class="line">this.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private SocketRequest(Parcel in) &#123;</span><br><span class="line">this.fid = in.readLong();</span><br><span class="line">this.data=new byte[in.readInt()];//read byte array length and create byte obj</span><br><span class="line">in.readByteArray(this.data);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">protected Object clone() throws CloneNotSupportedException &#123;</span><br><span class="line">return new SocketRequest(this.fid,this.data) ;</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public int describeContents() &#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void writeToParcel(Parcel dest, int flags) &#123;</span><br><span class="line">dest.writeLong(this.fid);</span><br><span class="line">dest.writeInt(data.length);</span><br><span class="line">dest.writeByteArray(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static final Parcelable.Creator&amp;lt;SocketRequest&amp;gt; CREATOR = new Parcelable.Creator&amp;lt;SocketRequest&amp;gt;() &#123;</span><br><span class="line">public SocketRequest createFromParcel(Parcel parcel) &#123;</span><br><span class="line">return new SocketRequest(parcel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public SocketRequest[] newArray(int size) &#123;</span><br><span class="line">return new SocketRequest[size];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>看到区别了吗。其实就是在read的时候，是需要先new好对象，然后Parcel会负责给你填入值，。<br>假如没有new这个对象，其实就是内部报了NullPointException。但是看log是看不出来了。<br>如果这里不是数组，而是Map之内的可能很快就能发现问题所在，因为大家看见Map第一反映就知道它是一个对象。<br>比如要new，而Parcel也是需要让传入map对独享给你填入值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;假如我的对象是SocketRequest实现了Parcelable接口（特别注意的是对象总有特别的数据，&lt;strong&gt;如byte［］ 等&lt;/strong&gt;）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="android" scheme="https://www.j99.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>linux shell 搜索并替换文本</title>
    <link href="https://www.j99.io/2014/06/23/linux-shell-e6-90-9c-e7-b4-a2-e5-b9-b6-e6-9b-bf-e6-8d-a2-e6-96-87-e6-9c-ac/"/>
    <id>https://www.j99.io/2014/06/23/linux-shell-e6-90-9c-e7-b4-a2-e5-b9-b6-e6-9b-bf-e6-8d-a2-e6-96-87-e6-9c-ac/</id>
    <published>2014-06-22T18:17:59.000Z</published>
    <updated>2018-03-27T10:17:58.180Z</updated>
    
    <content type="html"><![CDATA[<p>因而我公司工作需要，我讲linux shell写成linux shell 脚本<br>文件：build/envsetup.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">replace_usage</span></span>()&#123;</span><br><span class="line">cat &lt;&lt; USAGE</span><br><span class="line">Usage:</span><br><span class="line">replace [OPTIONS] old_str new_str</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">find and replace string</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">-t, --<span class="built_in">type</span></span><br><span class="line">USAGE</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">replace</span></span>()&#123;</span><br><span class="line">long_opts=<span class="string">"type:"</span></span><br><span class="line">getopt_cmd=$(getopt -o t: --long <span class="string">"<span class="variable">$long_opts</span>"</span> -n $(<span class="built_in">echo</span> <span class="string">"replace"</span>) -- <span class="string">"<span class="variable">$@</span>"</span>) || &#123; <span class="built_in">echo</span> -e <span class="string">"\nERROR: Getopt faild. Extra args\n"</span>;replace_usage;<span class="built_in">return</span> 0;&#125;;</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">"<span class="variable">$getopt_cmd</span>"</span></span><br><span class="line"><span class="built_in">local</span> <span class="built_in">type</span>=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">while</span> [ -n <span class="string">"<span class="variable">$1</span>"</span> ] </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">-t|--<span class="built_in">type</span>)</span><br><span class="line"><span class="built_in">type</span>=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">;;</span><br><span class="line">--) <span class="built_in">shift</span>;<span class="built_in">break</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$type</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">replace_usage</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> == 2 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"33[00;36mreplace....33[0m"</span></span><br><span class="line">find $(<span class="built_in">pwd</span>) -name <span class="string">"*\.<span class="variable">$type</span>"</span> | xargs sed -i <span class="string">"s/<span class="variable">$1</span>/<span class="variable">$2</span>/g"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"33[00;36mreplace end!33[0m"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">replace_usage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;&lt;</span><br></pre></td></tr></table></figure><p>使用：<br>1、<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. build/envsetup.sh</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br></pre></td></tr></table></figure></p><p>2:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace -t java com.henjue.app org.henjue.app (搜索所有java文件，并替换文件中的com.henjue.app为org.henjue.app)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因而我公司工作需要，我讲linux shell写成linux shell 脚本&lt;br&gt;文件：build/envsetup.sh&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
      <category term="linux" scheme="https://www.j99.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu 13.04编译pidgin-lwqq</title>
    <link href="https://www.j99.io/2014/06/16/ubuntu-13-04-e7-bc-96-e8-af-91pidgin-lwqq/"/>
    <id>https://www.j99.io/2014/06/16/ubuntu-13-04-e7-bc-96-e8-af-91pidgin-lwqq/</id>
    <published>2014-06-16T05:46:00.000Z</published>
    <updated>2018-03-27T10:17:58.181Z</updated>
    
    <content type="html"><![CDATA[<p>首先安装一些编译所需的库,和工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install cmake libglib2.0-dev libpurple-dev libmozjs185-dev libcurl-ocaml-dev libsqlite3-dev</span><br></pre></td></tr></table></figure><p>然后到作者的git下载代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:xiehuc/pidgin-lwqq.git</span><br></pre></td></tr></table></figure></p><p>下载完了开始编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line">mkdir build;<span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><p>搞定可以使用了<br>以下是我截图，发日志的同时刚给自己编译安装的<br><img src="http://images.cnitblog.com/blog/519621/201308/20094417-c0b36416085f4927a728ca950a1b7ce8.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先安装一些编译所需的库,和工具&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
      
    
    </summary>
    
      <category term="linux" scheme="https://www.j99.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>linux下制作Mac OS USB启动盘(百分之百可以)</title>
    <link href="https://www.j99.io/2013/06/16/linux-e4-b8-8b-e5-88-b6-e4-bd-9cmac-os-usb-e5-90-af-e5-8a-a8-e7-9b-98-e7-99-be-e5-88-86-e4-b9-8b-e7-99-be-e5-8f-af-e4-bb-a5/"/>
    <id>https://www.j99.io/2013/06/16/linux-e4-b8-8b-e5-88-b6-e4-bd-9cmac-os-usb-e5-90-af-e5-8a-a8-e7-9b-98-e7-99-be-e5-88-86-e4-b9-8b-e7-99-be-e5-8f-af-e4-bb-a5/</id>
    <published>2013-06-16T08:43:00.000Z</published>
    <updated>2018-03-27T10:17:58.179Z</updated>
    
    <content type="html"><![CDATA[<p>今天自己手贱把自己的macbook硬盘全干掉了,无奈回复系统,没有光盘.我的台式机上只有linux系统.但是我有OS 10.8的dmg镜像(很早之前下载放在电脑里的)使用苹果EFI固件上自带的在线恢复(开机command+R的那个在线恢复),奶奶的,我20M光纤,居然要还那么慢,所以放弃这个方法,后来上网搜了半天全是在mac下去制作USB启动盘,你妈都是写傻逼啊.我系统都没了,我还哪里去拿mac来做启动盘?好吧linux下弄吧</p><p>linux下先用parted命令给u盘从重新分区.其他工具我不知道但是我知道这个工具可以建立GUUID分区表(macbook只能从GUUID分区表的磁盘启动),打开parted后把分区都干掉,然后输入”mklabel gpt” 这个命令就是建立gpt(GUUID来区分磁盘分区的)分区表.parted的用法自己百度吧.一搜一大吧.把u盘的分区建立好之后直接用DD命令写入就行了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd <span class="keyword">if</span>=~/mac2udisk.dmg of=/dev/sdb2 bs=20M</span><br></pre></td></tr></table></figure></p><p>如果不把u盘弄成GUUID的分区.虽然开机能识别u盘,但是启动的时候会显示一个禁止的符号(大家应该看到过),还有如果不给U盘分区.直接DD写入到整个U盘(如直接写入/dev/sdb)建立分区后应该是/dev/sdbx(x是分区标号)开机也无法启动的.<br>我的u盘分区<br><img src="http://images.cnitblog.com/blog/519621/201306/17004612-e2610d2ac6eb45ef9a46394bf721688a.png" alt=""></p><p>我写入的命令<br><img src="http://images.cnitblog.com/blog/519621/201306/17004641-ded93595092e4b24878da2c8b8094099.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天自己手贱把自己的macbook硬盘全干掉了,无奈回复系统,没有光盘.我的台式机上只有linux系统.但是我有OS 10.8的dmg镜像(很早之前下载放在电脑里的)使用苹果EFI固件上自带的在线恢复(开机command+R的那个在线恢复),奶奶的,我20M光纤,居然要还那
      
    
    </summary>
    
      <category term="linux" scheme="https://www.j99.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>android继承View，onDraw方法实现首字母快速定位</title>
    <link href="https://www.j99.io/2013/05/29/android-e7-bb-a7-e6-89-bfview-ef-bc-8condraw-e6-96-b9-e6-b3-95-e5-ae-9e-e7-8e-b0-e9-a6-96-e5-ad-97-e6-af-8d-e5-bf-ab-e9-80-9f-e5-ae-9a-e4-bd-8d/"/>
    <id>https://www.j99.io/2013/05/29/android-e7-bb-a7-e6-89-bfview-ef-bc-8condraw-e6-96-b9-e6-b3-95-e5-ae-9e-e7-8e-b0-e9-a6-96-e5-ad-97-e6-af-8d-e5-bf-ab-e9-80-9f-e5-ae-9a-e4-bd-8d/</id>
    <published>2013-05-29T04:26:00.000Z</published>
    <updated>2018-03-27T10:17:58.177Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">package com.example.contactssort;</span><br><span class="line"></span><br><span class="line">import android.annotation.SuppressLint;</span><br><span class="line">import android.annotation.TargetApi;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.graphics.Canvas;</span><br><span class="line">import android.graphics.Paint;</span><br><span class="line">import android.graphics.Paint.FontMetrics;</span><br><span class="line">import android.graphics.Paint.Style;</span><br><span class="line">import android.graphics.RectF;</span><br><span class="line">import android.os.Build;</span><br><span class="line">import android.util.AttributeSet;</span><br><span class="line">import android.view.MotionEvent;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.ListView;</span><br><span class="line">import android.widget.SectionIndexer;</span><br><span class="line"></span><br><span class="line">public class SideBar extends View &#123;</span><br><span class="line">    private int textColor = 0xFFA6A9AA;</span><br><span class="line">    private int backgroundColor = 0x55DDDDDD;</span><br><span class="line">    private int backgroundActionDownColor = 0xFFCCCCCC;</span><br><span class="line">    private boolean isDown = false;</span><br><span class="line"></span><br><span class="line">    @TargetApi(Build.VERSION_CODES.HONEYCOMB)</span><br><span class="line">    public SideBar(Context context, AttributeSet attrs, int defStyle) &#123;</span><br><span class="line">        super(context, attrs, defStyle);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private char[] l = new char[0];</span><br><span class="line">    private SectionIndexer sectionIndexter = null;</span><br><span class="line">    private ListView list;</span><br><span class="line">    private int m_nItemHeight = 29;</span><br><span class="line">    private int selfHeight;</span><br><span class="line">    private int selfWidth;</span><br><span class="line">    private float textSize;</span><br><span class="line">    private int selectIndex = -1;</span><br><span class="line"></span><br><span class="line">    public SideBar(Context context) &#123;</span><br><span class="line">        super(context);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void init() &#123;</span><br><span class="line">        // setBackgroundColor(backgroundColor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public SideBar(Context context, AttributeSet attrs) &#123;</span><br><span class="line">        super(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setListView(ListView _list) &#123;</span><br><span class="line">        list = _list;</span><br><span class="line">        sectionIndexter = (SectionIndexer) _list.getAdapter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</span><br><span class="line">        this.textSize = getResources().getDimension(R.dimen.index_text_size);</span><br><span class="line">        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        int height = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line">        int width = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        this.selfHeight = height;</span><br><span class="line">        this.selfWidth = width;</span><br><span class="line">        m_nItemHeight = selfHeight / l.length;</span><br><span class="line">        int newWidth = MeasureSpec.makeMeasureSpec((int) this.textSize + 5, MeasureSpec.AT_MOST);</span><br><span class="line">        setMeasuredDimension(newWidth, heightMeasureSpec);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean onTouchEvent(MotionEvent event) &#123;</span><br><span class="line">        super.onTouchEvent(event);</span><br><span class="line">        int i = (int) event.getY();</span><br><span class="line">        int idx = i / m_nItemHeight;</span><br><span class="line">        if (idx &gt;= l.length) &#123;</span><br><span class="line">            idx = l.length - 1;</span><br><span class="line">        &#125; else if (idx &lt; 0) &#123;</span><br><span class="line">            idx = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) &#123;</span><br><span class="line">            if (sectionIndexter == null) &#123;</span><br><span class="line">                sectionIndexter = (SectionIndexer) list.getAdapter();</span><br><span class="line">            &#125;</span><br><span class="line">            int position = sectionIndexter.getPositionForSection(l[idx]);</span><br><span class="line">            if (position == -1) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            this.selectIndex = idx;</span><br><span class="line">            list.setSelection(position);</span><br><span class="line">            isDown = true;</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line">        if (event.getAction() == MotionEvent.ACTION_UP) &#123;</span><br><span class="line">            isDown = false;</span><br><span class="line">            this.selectIndex = -1;</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @SuppressLint(&quot;DrawAllocation&quot;)</span><br><span class="line">    protected void onDraw(Canvas canvas) &#123;</span><br><span class="line">        Paint paint = new Paint();</span><br><span class="line">        paint.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">        paint.setTextSize(this.textSize);</span><br><span class="line">        paint.setColor(textColor);</span><br><span class="line">        FontMetrics fm = paint.getFontMetrics();</span><br><span class="line">        int textHeight = (int) (Math.ceil(fm.descent - fm.ascent) + 2);</span><br><span class="line">        float widthCenter = getMeasuredWidth() / 2;</span><br><span class="line">        RectF rect = null;</span><br><span class="line">        Paint bg_paint = new Paint(paint);</span><br><span class="line"></span><br><span class="line">        if (isDown) &#123;</span><br><span class="line">            rect = new RectF(0, 0, getWidth(), getHeight());</span><br><span class="line">            bg_paint.setColor(backgroundActionDownColor);</span><br><span class="line"></span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            rect = new RectF(0, 0, getWidth(), getHeight());</span><br><span class="line">            bg_paint.setColor(backgroundColor);</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.save();</span><br><span class="line">        canvas.drawRoundRect(rect, 15, 15, bg_paint);</span><br><span class="line">        canvas.restore();</span><br><span class="line">        for (int i = 0; i &lt; l.length; i++) &#123;</span><br><span class="line">            if (selectIndex == i) &#123;</span><br><span class="line">                Paint item_bg_paint = new Paint(paint);</span><br><span class="line">                item_bg_paint.setColor(0xffccffcc);</span><br><span class="line">                canvas.save();</span><br><span class="line">                RectF item_rect = new RectF(0, i * m_nItemHeight, getWidth(), m_nItemHeight + i * m_nItemHeight);</span><br><span class="line">                canvas.drawRoundRect(item_rect, 15, 15, item_bg_paint);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125; else if (selectIndex == l.length - 1) &#123;</span><br><span class="line">                Paint item_bg_paint = new Paint(paint);</span><br><span class="line">                item_bg_paint.setColor(0xffccffcc);</span><br><span class="line">                canvas.save();</span><br><span class="line">                RectF item_rect = new RectF(0, l.length * m_nItemHeight, getWidth(), getHeight());</span><br><span class="line">                canvas.drawRoundRect(item_rect, 15, 15, item_bg_paint);</span><br><span class="line">                canvas.restore();</span><br><span class="line">            &#125;</span><br><span class="line">float offsetY=((i)*m_nItemHeight)+((m_nItemHeight-textHeight)/2+textHeight-8);//字体纵向居中，20130530修正更新</span><br><span class="line">canvas.drawText(String.valueOf(l[i]), widthCenter, offsetY, paint);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        super.onDraw(canvas);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setSections(char[] charArray) &#123;</span><br><span class="line">        this.l = charArray;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package com.example.contactssort;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class IndexItem &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; indexs = new ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 添加数据索引。每一个数据都要添加</span><br><span class="line">     * </span><br><span class="line">     * @param c</span><br><span class="line">     */</span><br><span class="line">    public void addIndex(char c) &#123;</span><br><span class="line">        indexs.add(String.valueOf(c));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getCount() &#123;</span><br><span class="line">        return indexs.size();</span><br><span class="line">    &#125;</span><br><span class="line">    public int indexAt(char c)&#123;</span><br><span class="line">        return indexs.indexOf(String.valueOf(c));</span><br><span class="line">    &#125;</span><br><span class="line">    public String get(int position) &#123;</span><br><span class="line">        return this.indexs.get(position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">package com.example.contactssort;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Locale;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.database.Cursor;</span><br><span class="line">import android.graphics.Color;</span><br><span class="line">import android.view.Gravity;</span><br><span class="line">import android.view.LayoutInflater;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.view.ViewGroup;</span><br><span class="line">import android.widget.AlphabetIndexer;</span><br><span class="line">import android.widget.BaseAdapter;</span><br><span class="line">import android.widget.SectionIndexer;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line"></span><br><span class="line">public class MyAdapter extends BaseAdapter implements SectionIndexer &#123;</span><br><span class="line">    private ArrayList&lt;String&gt; stringArray;</span><br><span class="line">    private Context context;</span><br><span class="line">    IndexItem indexs;</span><br><span class="line">    public MyAdapter(Context _context, ArrayList&lt;String&gt; arr,SideBar sidebar) &#123;</span><br><span class="line">        stringArray = arr;</span><br><span class="line">        context = _context;</span><br><span class="line">        String alphabet=&quot;&quot;;</span><br><span class="line">        indexs=new IndexItem();</span><br><span class="line">        for(String frist:arr)&#123;</span><br><span class="line">            char c = frist.charAt(0);</span><br><span class="line">            String upperCase = String.valueOf(c).toUpperCase();</span><br><span class="line">            if(!alphabet.contains(upperCase))&#123;</span><br><span class="line">                alphabet+=upperCase;    </span><br><span class="line">            &#125;</span><br><span class="line">            indexs.addIndex(upperCase.charAt(0));</span><br><span class="line">        &#125;</span><br><span class="line">        sidebar.setSections(alphabet.toUpperCase().toCharArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getCount() &#123;</span><br><span class="line">        return stringArray.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object getItem(int arg0) &#123;</span><br><span class="line">        return stringArray.get(arg0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public long getItemId(int arg0) &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public View getView(int position, View v, ViewGroup parent) &#123;</span><br><span class="line">        LayoutInflater inflate = ((Activity) context).getLayoutInflater();</span><br><span class="line">        View view = (View) inflate.inflate(R.layout.listview_row, null);</span><br><span class="line">        TextView header = (TextView) view.findViewById(R.id.section);</span><br><span class="line">        TextView textView = (TextView) view.findViewById(R.id.textView);</span><br><span class="line">        char currentF=stringArray.get(position).charAt(0);</span><br><span class="line">        if(position==0)&#123;</span><br><span class="line">            header.setVisibility(View.VISIBLE);</span><br><span class="line">            header.setText((&quot;&quot;+currentF).toUpperCase());</span><br><span class="line">        &#125;else&#123;</span><br><span class="line"></span><br><span class="line">            char oldF=stringArray.get(position-1).charAt(0);</span><br><span class="line">            if(!(&quot;&quot;+currentF).equalsIgnoreCase((&quot;&quot;+oldF)))&#123;</span><br><span class="line">                header.setVisibility(View.VISIBLE);</span><br><span class="line">                header.setText((&quot;&quot;+currentF).toUpperCase());</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                header.setVisibility(View.GONE);</span><br><span class="line">                header.setText(&quot;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        textView.setText(stringArray.get(position));</span><br><span class="line">        return view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getPositionForSection(int section) &#123;</span><br><span class="line">        int position=indexs.indexAt((char) section);</span><br><span class="line">        return position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getSectionForPosition(int arg0) &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object[] getSections() &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">package com.example.contactssort;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.widget.ListView;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends Activity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ListView list = (ListView) findViewById(R.id.myListView);</span><br><span class="line">        SideBar side=(SideBar)findViewById(R.id.side);</span><br><span class="line">        ArrayList&lt;String&gt; stringList = InitListViewData();</span><br><span class="line">        MyAdapter adapter = new MyAdapter(this, stringList,side);</span><br><span class="line">        side.setListView(list);</span><br><span class="line">        list.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private ArrayList&lt;String&gt; InitListViewData() &#123;</span><br><span class="line">        ArrayList&lt;String&gt; stringList = new ArrayList&lt;String&gt;();</span><br><span class="line">        stringList.add(&quot;asdf&quot;);</span><br><span class="line">        stringList.add(&quot;anbcd&quot;);</span><br><span class="line">        stringList.add(&quot;bdcd&quot;);</span><br><span class="line">        stringList.add(&quot;bfefasf&quot;);</span><br><span class="line">        stringList.add(&quot;bcadaf&quot;);</span><br><span class="line">        stringList.add(&quot;csdafad&quot;);</span><br><span class="line">        stringList.add(&quot;dfdaf&quot;);</span><br><span class="line">        stringList.add(&quot;edfdfd&quot;);</span><br><span class="line">        stringList.add(&quot;fsdfadfasfd&quot;);</span><br><span class="line">        stringList.add(&quot;fadsfasdf&quot;);</span><br><span class="line">        stringList.add(&quot;fweff&quot;);</span><br><span class="line">        stringList.add(&quot;fhghdfgh&quot;);</span><br><span class="line">        stringList.add(&quot;gasdfasdfsa&quot;);</span><br><span class="line">        stringList.add(&quot;gadfawe&quot;);</span><br><span class="line">        stringList.add(&quot;haof&quot;);</span><br><span class="line">        stringList.add(&quot;hjooiuoiuio&quot;);</span><br><span class="line">        stringList.add(&quot;iasdfasdfas&quot;);</span><br><span class="line">        stringList.add(&quot;zero&quot;);</span><br><span class="line">        stringList.add(&quot;zoo&quot;);</span><br><span class="line">        stringList.add(&quot;zeus&quot;);</span><br><span class="line">        stringList.add(&quot;zebra&quot;);</span><br><span class="line">        stringList.add(&quot;zest&quot;);</span><br><span class="line">        stringList.add(&quot;zing&quot;);</span><br><span class="line">        return stringList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://images.cnitblog.com/blog/519621/201305/29202506-62bcdfc453b447bfa587bc07230e2487.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="android" scheme="https://www.j99.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>mac os 下彻底删除VMware Fusion 使用简单的两个命令就可以了</title>
    <link href="https://www.j99.io/2013/05/24/mac-os-e4-b8-8b-e5-bd-bb-e5-ba-95-e5-88-a0-e9-99-a4vmware-fusion-e4-bd-bf-e7-94-a8-e7-ae-80-e5-8d-95-e7-9a-84-e4-b8-a4-e4-b8-aa-e5-91-bd-e4-bb-a4-e5-b0-b1-e5-8f-af-e4-bb-a5-e4-ba-86/"/>
    <id>https://www.j99.io/2013/05/24/mac-os-e4-b8-8b-e5-bd-bb-e5-ba-95-e5-88-a0-e9-99-a4vmware-fusion-e4-bd-bf-e7-94-a8-e7-ae-80-e5-8d-95-e7-9a-84-e4-b8-a4-e4-b8-aa-e5-91-bd-e4-bb-a4-e5-b0-b1-e5-8f-af-e4-bb-a5-e4-ba-86/</id>
    <published>2013-05-23T19:45:00.000Z</published>
    <updated>2018-03-27T10:17:58.180Z</updated>
    
    <content type="html"><![CDATA[<p>打开终端首先切换到root帐号登录</p><p>执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find /Applications/ -iname <span class="string">"*vmware*"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; ;</span><br><span class="line">find /Library/ -iname <span class="string">"*vmware*"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; ;</span><br><span class="line">find /Users/你平时使用的用户名/ -iname <span class="string">"*vmware*"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; ;</span><br></pre></td></tr></table></figure></p><p>注:mac下使用 find | xargs rm -rf的的方式没法删除，但是一般发行版的linux下就可以使用这个方式使用以上使用了exec</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开终端首先切换到root帐号登录&lt;/p&gt;
&lt;p&gt;执行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="linux" scheme="https://www.j99.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>仿IOS版本印象笔记下拉主菜单</title>
    <link href="https://www.j99.io/2013/05/06/-e4-bb-bfios-e7-89-88-e6-9c-ac-e5-8d-b0-e8-b1-a1-e7-ac-94-e8-ae-b0-e4-b8-8b-e6-8b-89-e4-b8-bb-e8-8f-9c-e5-8d-95/"/>
    <id>https://www.j99.io/2013/05/06/-e4-bb-bfios-e7-89-88-e6-9c-ac-e5-8d-b0-e8-b1-a1-e7-ac-94-e8-ae-b0-e4-b8-8b-e6-8b-89-e4-b8-bb-e8-8f-9c-e5-8d-95/</id>
    <published>2013-05-06T07:59:00.000Z</published>
    <updated>2018-03-27T10:17:58.174Z</updated>
    
    <content type="html"><![CDATA[<p>因为项目需要，但是网上没找到类似的，就花了十几分钟刚初步完成了一点了，现上传。等全部完善了再上传.</p><p><img src="http://images.cnitblog.com/blog/519621/201305/06235641-b8bda10f4d64443fbcd5f1c0cf0d03c3.png" alt=""></p><p>百度网盘地址源码地址<a href="http://pan.baidu.com/share/link?shareid=507542&amp;uk=1410129156" target="_blank" rel="noopener">http://pan.baidu.com/share/link?shareid=507542&amp;uk=1410129156</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为项目需要，但是网上没找到类似的，就花了十几分钟刚初步完成了一点了，现上传。等全部完善了再上传.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/519621/201305/06235641-b8bda10f4d64443
      
    
    </summary>
    
      <category term="android" scheme="https://www.j99.io/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>【转帖】软件开发之生命周期 各阶段的任务</title>
    <link href="https://www.j99.io/2011/04/25/-e3-80-90-e8-bd-ac-e5-b8-96-e3-80-91-e8-bd-af-e4-bb-b6-e5-bc-80-e5-8f-91-e4-b9-8b-e7-94-9f-e5-91-bd-e5-91-a8-e6-9c-9f-e5-90-84-e9-98-b6-e6-ae-b5-e7-9a-84-e4-bb-bb-e5-8a-a1/"/>
    <id>https://www.j99.io/2011/04/25/-e3-80-90-e8-bd-ac-e5-b8-96-e3-80-91-e8-bd-af-e4-bb-b6-e5-bc-80-e5-8f-91-e4-b9-8b-e7-94-9f-e5-91-bd-e5-91-a8-e6-9c-9f-e5-90-84-e9-98-b6-e6-ae-b5-e7-9a-84-e4-bb-bb-e5-8a-a1/</id>
    <published>2011-04-24T22:23:15.000Z</published>
    <updated>2018-03-27T10:17:58.174Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1．问题定义</strong><br>本阶段需要明确回答：要解决的问题是什么？。<br>统分析员应该提出问题的性质、目标和规模的书面报告。通过对实际用户和使用部门的调查、研究，以及讨论、交流，得出一份双方都满意的文档</p><p><strong>2 ．可行性分析</strong><br>本阶段需要回答的是：上一阶段确定的问题有无可行的解决方案，是否值得解决？。<br>更进一步明确项目的规模和目标，从技术可行性、经济可行性、操作可行性、法律可行性、社会可行性等方面进行研究，确定是否开发本项目。</p><p><strong>3．需求分析</strong><br>本阶段确定为解决该问题，目标系统必须应具备哪些功能。<br>系统分析员在本阶段必须与用户密切配合，充分交流，得到经用户确认的系统逻辑模型，用数据流图、数据字典等描述系统的逻辑模型。<br>需求分析阶段所确定的系统逻辑模型是以后设计和实现目标系统的基础，必须准确、完整的体现用户的需求。</p><p><strong>4．总体设计</strong><br>本阶段确定目标系统的主要功能如何完成。采用流程图或其他工具描述出每种可能的系统，推荐出一个最佳的方案，并制定出实现该系统的详细计划。<br>本阶段的另一个主要任务是设计软件的结构，确定软件应由哪些模块构成，以及模块之间的关系。<br>还应考虑系统的开发和应用环境，如计算机系统的配置，计算机网络等。</p><p><strong>5．详细设计</strong><br>详细设计阶段的任务就是把问题的求解具体化，设计出程序的详细规格说明。<br>通常用HIPO图（层次图/输入/处理/输出）或PDL语言（过程设计语言）描述详细设计的结果。</p><p><strong>6．编码和单元测试</strong><br>本阶段的任务是编写软件程序。程序员应根据目标系统的要求，选取适合的程序设计语言，把详细设计的结果编制成程序，并对每一个模块进行单元测试。<br>需要考虑软件平台、开发工具等等。</p><p><strong>7．综合测试</strong><br>本阶段的任务是通过各种测试以及相应的调试，使软件达到预定的要求。<br>应该把测试计划、测试方案、测试结果等以文档的形式保存下来，作为软件配置的一个组成部分。</p><p><strong>8．软件维护</strong><br>软件维护的任务是，通过各种必要的维护活动使系统持久地满足用户的需要。<br>通常有4类维护活动：改正性维护；适应性维护；完善性维护；预防性维护。<br>每一项维护活动都应该准确地记录下来，作为正式的文档保存。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1．问题定义&lt;/strong&gt;&lt;br&gt;本阶段需要明确回答：要解决的问题是什么？。&lt;br&gt;统分析员应该提出问题的性质、目标和规模的书面报告。通过对实际用户和使用部门的调查、研究，以及讨论、交流，得出一份双方都满意的文档&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 ．可行
      
    
    </summary>
    
      <category term="other" scheme="https://www.j99.io/categories/other/"/>
    
    
  </entry>
  
</feed>
